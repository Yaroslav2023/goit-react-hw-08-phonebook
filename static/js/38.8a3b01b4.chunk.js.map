{"version":3,"file":"static/js/38.8a3b01b4.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/Contact/contact.module.css?527a","components/ContactList/Contact/Contact.js","webpack://react-homework-template/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/UserMenu/userMenu.module.css?3e42","components/UserMenu/UserMenu.jsx","pages/ContactPage.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__3ay0L\",\"inputItem\":\"contactForm_inputItem__d11Xf\",\"btn\":\"contactForm_btn__qtr3a\"};","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/API/contactsApi';\nimport Notiflix from 'notiflix';\nimport cl from './contactForm.module.css';\n\nconst ContactForm = () => {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n    const contact = { id: nanoid(), name, number };\n    const normalizedFind = name.toLocaleLowerCase();\n    contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedFind\n    )\n      ? Notiflix.Notify.warning(`${name} is already in contacts!`)\n      : addContact(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={cl.form} onSubmit={handleFormSubmit}>\n      <label className={cl.inputItem}>\n        Name <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-ЯІіЇїҐґ' \\-\\u0400-\\u04FF]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={cl.inputItem}>\n        Number\n        <br />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"^[+]?[0-9\\\\.\\\\-\\\\s]{1,15}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"123-45-67\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={cl.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__HJEMj\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChanges } from 'redux/filterSlice';\nimport cl from './filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const { searchQuery } = useSelector(state => state.filter);\n\n  const onChangeFilterValue = e => {\n    dispatch(filterChanges(e.target.value));\n  };\n  return (\n    <div className={cl.filter}>\n      <h2>Contacts:</h2>\n      <input\n        onChange={onChangeFilterValue}\n        value={searchQuery}\n        placeholder=\"Find...\"\n      ></input>\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contact_item__t3XJW\",\"btn\":\"contact_btn__Y7CP-\"};","import { useSelector } from 'react-redux';\nimport {\n  useDeleteContactMutation,\n  useGetContactsQuery,\n} from 'redux/API/contactsApi';\nimport cl from './contact.module.css';\n\nconst Contact = () => {\n  const token = useSelector(state => state.auth.token);\n  const { data: contacts, isLoading, error } = useGetContactsQuery(token);\n  const { filter } = useSelector(state => state.filter);\n  const [deleteContact] = useDeleteContactMutation();\n\n  if (isLoading && !error) {\n    return (\n      <div>\n        <p>Load...</p>\n      </div>\n    );\n  }\n  if (error) {\n    return (\n      <div>\n        <p>Ooops!!! Something went wrong!</p>\n        <p>Error:{error}</p>\n      </div>\n    );\n  }\n\n  const getFilteredContacts = () => {\n    return (contacts || []).filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li key={id} className={cl.item}>\n          {name}: {number}\n          <button\n            className={cl.btn}\n            type=\"button\"\n            onClick={() => deleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"contactList_contacts__i82-C\"};","import React from 'react';\nimport Contact from './Contact';\nimport cl from './contactList.module.css';\n\nconst ContactList = () => {\n  return (\n    <div className={cl.contacts}>\n      <ul>\n        <Contact />\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"userMenu_item__8KT85\",\"text\":\"userMenu_text__ZqiCH\",\"email\":\"userMenu_email__lWiMQ\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetCurrentUserQuery } from 'redux/auth';\nimport { logOut } from 'redux/auth/authSlice';\nimport cl from './userMenu.module.css';\n\nfunction UserMenu() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const token = useSelector(state => state.auth.token);\n  const { data, isLoading } = useGetCurrentUserQuery(token);\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n    navigate('/login');\n  };\n\n  return (\n    <div className={cl.item}>\n      <h2 className={cl.text}>Phonebook</h2>\n      <p className={cl.email}>\n        Welcome {isLoading ? 'Your name ...' : <span>{data.email}</span>}\n      </p>\n      <button type=\"button\" onClick={handleLogOut}>\n        Logout\n      </button>\n    </div>\n  );\n}\n\nexport default UserMenu;\n","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport React from 'react';\nimport UserMenu from 'components/UserMenu';\n\nconst ContactPage = () => {\n  return (\n    <div>\n      <UserMenu />\n      <ContactForm />\n\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","useAddContactMutation","addContact","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","className","cl","onSubmit","evt","preventDefault","contact","normalizedFind","toLocaleLowerCase","find","Notiflix","type","onChange","pattern","title","required","placeholder","dispatch","useDispatch","searchQuery","useSelector","state","filter","e","filterChanges","target","token","auth","isLoading","error","useDeleteContactMutation","deleteContact","filteredContacts","toLowerCase","includes","map","onClick","navigate","useNavigate","useGetCurrentUserQuery","email","logOut"],"sourceRoot":""}