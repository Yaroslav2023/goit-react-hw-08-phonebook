{"version":3,"file":"static/js/773.8556e0df.chunk.js","mappings":"+SACA,EAAwB,qBAAxB,EAAoD,oBAApD,EAA+E,oB,4BCOzEA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA+DZ,EA5Dc,SAAAC,GACZ,OAAgCC,EAAAA,EAAAA,WAAS,UAAKD,IAA9C,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdX,GAAY,SAAAY,GAAS,yBAAUA,GAAV,cAAsBF,EAAOC,GAA7B,GACtB,EAEKE,EAAY,mCAAG,WAAML,GAAN,gFACnBA,EAAEM,iBADiB,kBAIMZ,EAAMH,GAJZ,gBAITgB,EAJS,EAITA,KACRZ,GAASa,EAAAA,EAAAA,IAASD,EAAKE,QACvBZ,EAAS,KANQ,kDAQjBa,IAAAA,OAAAA,QAAA,6BARiB,QAWnBC,IAXmB,0DAAH,sDAcZA,EAAQ,WACZnB,EAAYN,EACb,EAED,OACE,iBAAK0B,UAAWC,EAAhB,WACE,kBAAMC,SAAUT,EAAcO,UAAWC,EAAzC,WACE,eAAID,UAAWC,EAAf,sCACA,uCACA,kBACEE,KAAK,QACLb,KAAK,QACLC,MAAOZ,EAASJ,MAChB6B,SAAUjB,EACVkB,YAAY,cACZC,UAAQ,KAEV,0CACA,kBACEH,KAAK,WACLb,KAAK,WACLC,MAAOZ,EAASH,SAChB4B,SAAUjB,EACVoB,aAAa,mBACbF,YAAY,cACZC,UAAQ,KAEV,mBAAQH,KAAK,SAAb,yBAEF,0CACA,SAAC,KAAD,CAASK,GAAG,YAAZ,uBAGL,EC7DD,MARA,WACE,OACE,0BACE,SAAC,EAAD,KAGL,C,uBCTD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBzB,EAAQ0B,EAAK1B,KAInB,CAHE,MAAO2B,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQpB,GAER6B,QAAQT,QAAQpB,GAAO8B,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMtB,GACbkB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQvB,EAClE,CAEA,SAASuB,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Login/login.module.css?7136","components/Login/Login.jsx","pages/LoginPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__DdzIu\",\"form\":\"login_form__nMXz6\",\"text\":\"login_text__F4KvT\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useLoginMutation } from 'redux/auth';\nimport { setToken } from 'redux/auth/authSlice';\nimport cl from './login.module.css';\nimport Notiflix from 'notiflix';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst Login = evt => {\n  const [formData, setFormData] = useState({ ...evt });\n  const [login] = useLoginMutation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const { data } = await login(formData);\n      dispatch(setToken(data.token));\n      navigate('/');\n    } catch (error) {\n      Notiflix.Notify.warning(`Invalid login or password`);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setFormData(INITIAL_STATE);\n  };\n\n  return (\n    <div className={cl.login}>\n      <form onSubmit={handleSubmit} className={cl.form}>\n        <h2 className={cl.text}>Sign in to your account</h2>\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          placeholder=\"123@test.ua\"\n          required\n        />\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          autoComplete=\"current-password\"\n          placeholder=\"password...\"\n          required\n        />\n        <button type=\"submit\">Sign in</button>\n      </form>\n      <p>Not a member?</p>\n      <NavLink to=\"/register\">Sign up</NavLink>\n    </div>\n  );\n};\nexport default Login;\n","import Login from 'components/Login/Login';\nimport React from 'react';\n\nfunction LoginPage() {\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["INITIAL_STATE","email","password","evt","useState","formData","setFormData","useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","name","value","prevState","handleSubmit","preventDefault","data","setToken","token","Notiflix","reset","className","cl","onSubmit","type","onChange","placeholder","required","autoComplete","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}